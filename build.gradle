plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.monicahq'
version = '0.1.0'
description = 'MCP server for MonicaHQ CRM integration'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Core
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	
	// Resilience & Mapping
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.1.0'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.projectlombok:lombok'
	
	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Annotation Processors
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
	
	// Configure test execution for maximum parallelization
	maxParallelForks = Runtime.runtime.availableProcessors()  // Use all available cores
	
	// Set reasonable timeouts
	timeout = java.time.Duration.ofMinutes(5)
	
	// JVM options for better performance
	jvmArgs '-Xmx512m', '-XX:MaxMetaspaceSize=256m'
}
